"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/decompress-response";
exports.ids = ["vendor-chunks/decompress-response"];
exports.modules = {

/***/ "(ssr)/./node_modules/decompress-response/index.js":
/*!***************************************************!*\
  !*** ./node_modules/decompress-response/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { Transform, PassThrough } = __webpack_require__(/*! stream */ \"stream\");\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\nconst mimicResponse = __webpack_require__(/*! mimic-response */ \"(ssr)/./node_modules/mimic-response/index.js\");\nmodule.exports = (response)=>{\n    const contentEncoding = (response.headers[\"content-encoding\"] || \"\").toLowerCase();\n    delete response.headers[\"content-encoding\"];\n    if (![\n        \"gzip\",\n        \"deflate\",\n        \"br\"\n    ].includes(contentEncoding)) {\n        return response;\n    }\n    // TODO: Remove this when targeting Node.js 12.\n    const isBrotli = contentEncoding === \"br\";\n    if (isBrotli && typeof zlib.createBrotliDecompress !== \"function\") {\n        response.destroy(new Error(\"Brotli is not supported on Node.js < 12\"));\n        return response;\n    }\n    let isEmpty = true;\n    const checker = new Transform({\n        transform (data, _encoding, callback) {\n            isEmpty = false;\n            callback(null, data);\n        },\n        flush (callback) {\n            callback();\n        }\n    });\n    const finalStream = new PassThrough({\n        autoDestroy: false,\n        destroy (error, callback) {\n            response.destroy();\n            callback(error);\n        }\n    });\n    const decompressStream = isBrotli ? zlib.createBrotliDecompress() : zlib.createUnzip();\n    decompressStream.once(\"error\", (error)=>{\n        if (isEmpty && !response.readable) {\n            finalStream.end();\n            return;\n        }\n        finalStream.destroy(error);\n    });\n    mimicResponse(response, finalStream);\n    response.pipe(checker).pipe(decompressStream).pipe(finalStream);\n    return finalStream;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZGVjb21wcmVzcy1yZXNwb25zZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU0sRUFBQ0EsU0FBUyxFQUFFQyxXQUFXLEVBQUMsR0FBR0MsbUJBQU9BLENBQUM7QUFDekMsTUFBTUMsT0FBT0QsbUJBQU9BLENBQUM7QUFDckIsTUFBTUUsZ0JBQWdCRixtQkFBT0EsQ0FBQztBQUU5QkcsT0FBT0MsT0FBTyxHQUFHQyxDQUFBQTtJQUNoQixNQUFNQyxrQkFBa0IsQ0FBQ0QsU0FBU0UsT0FBTyxDQUFDLG1CQUFtQixJQUFJLEVBQUMsRUFBR0MsV0FBVztJQUNoRixPQUFPSCxTQUFTRSxPQUFPLENBQUMsbUJBQW1CO0lBRTNDLElBQUksQ0FBQztRQUFDO1FBQVE7UUFBVztLQUFLLENBQUNFLFFBQVEsQ0FBQ0gsa0JBQWtCO1FBQ3pELE9BQU9EO0lBQ1I7SUFFQSwrQ0FBK0M7SUFDL0MsTUFBTUssV0FBV0osb0JBQW9CO0lBQ3JDLElBQUlJLFlBQVksT0FBT1QsS0FBS1Usc0JBQXNCLEtBQUssWUFBWTtRQUNsRU4sU0FBU08sT0FBTyxDQUFDLElBQUlDLE1BQU07UUFDM0IsT0FBT1I7SUFDUjtJQUVBLElBQUlTLFVBQVU7SUFFZCxNQUFNQyxVQUFVLElBQUlqQixVQUFVO1FBQzdCa0IsV0FBVUMsSUFBSSxFQUFFQyxTQUFTLEVBQUVDLFFBQVE7WUFDbENMLFVBQVU7WUFFVkssU0FBUyxNQUFNRjtRQUNoQjtRQUVBRyxPQUFNRCxRQUFRO1lBQ2JBO1FBQ0Q7SUFDRDtJQUVBLE1BQU1FLGNBQWMsSUFBSXRCLFlBQVk7UUFDbkN1QixhQUFhO1FBQ2JWLFNBQVFXLEtBQUssRUFBRUosUUFBUTtZQUN0QmQsU0FBU08sT0FBTztZQUVoQk8sU0FBU0k7UUFDVjtJQUNEO0lBRUEsTUFBTUMsbUJBQW1CZCxXQUFXVCxLQUFLVSxzQkFBc0IsS0FBS1YsS0FBS3dCLFdBQVc7SUFFcEZELGlCQUFpQkUsSUFBSSxDQUFDLFNBQVNILENBQUFBO1FBQzlCLElBQUlULFdBQVcsQ0FBQ1QsU0FBU3NCLFFBQVEsRUFBRTtZQUNsQ04sWUFBWU8sR0FBRztZQUNmO1FBQ0Q7UUFFQVAsWUFBWVQsT0FBTyxDQUFDVztJQUNyQjtJQUVBckIsY0FBY0csVUFBVWdCO0lBQ3hCaEIsU0FBU3dCLElBQUksQ0FBQ2QsU0FBU2MsSUFBSSxDQUFDTCxrQkFBa0JLLElBQUksQ0FBQ1I7SUFFbkQsT0FBT0E7QUFDUiIsInNvdXJjZXMiOlsid2VicGFjazovL2FkbWlzc2lvbi11cGxpZnQvLi9ub2RlX21vZHVsZXMvZGVjb21wcmVzcy1yZXNwb25zZS9pbmRleC5qcz8yNDg3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IHtUcmFuc2Zvcm0sIFBhc3NUaHJvdWdofSA9IHJlcXVpcmUoJ3N0cmVhbScpO1xuY29uc3QgemxpYiA9IHJlcXVpcmUoJ3psaWInKTtcbmNvbnN0IG1pbWljUmVzcG9uc2UgPSByZXF1aXJlKCdtaW1pYy1yZXNwb25zZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlc3BvbnNlID0+IHtcblx0Y29uc3QgY29udGVudEVuY29kaW5nID0gKHJlc3BvbnNlLmhlYWRlcnNbJ2NvbnRlbnQtZW5jb2RpbmcnXSB8fCAnJykudG9Mb3dlckNhc2UoKTtcblx0ZGVsZXRlIHJlc3BvbnNlLmhlYWRlcnNbJ2NvbnRlbnQtZW5jb2RpbmcnXTtcblxuXHRpZiAoIVsnZ3ppcCcsICdkZWZsYXRlJywgJ2JyJ10uaW5jbHVkZXMoY29udGVudEVuY29kaW5nKSkge1xuXHRcdHJldHVybiByZXNwb25zZTtcblx0fVxuXG5cdC8vIFRPRE86IFJlbW92ZSB0aGlzIHdoZW4gdGFyZ2V0aW5nIE5vZGUuanMgMTIuXG5cdGNvbnN0IGlzQnJvdGxpID0gY29udGVudEVuY29kaW5nID09PSAnYnInO1xuXHRpZiAoaXNCcm90bGkgJiYgdHlwZW9mIHpsaWIuY3JlYXRlQnJvdGxpRGVjb21wcmVzcyAhPT0gJ2Z1bmN0aW9uJykge1xuXHRcdHJlc3BvbnNlLmRlc3Ryb3kobmV3IEVycm9yKCdCcm90bGkgaXMgbm90IHN1cHBvcnRlZCBvbiBOb2RlLmpzIDwgMTInKSk7XG5cdFx0cmV0dXJuIHJlc3BvbnNlO1xuXHR9XG5cblx0bGV0IGlzRW1wdHkgPSB0cnVlO1xuXG5cdGNvbnN0IGNoZWNrZXIgPSBuZXcgVHJhbnNmb3JtKHtcblx0XHR0cmFuc2Zvcm0oZGF0YSwgX2VuY29kaW5nLCBjYWxsYmFjaykge1xuXHRcdFx0aXNFbXB0eSA9IGZhbHNlO1xuXG5cdFx0XHRjYWxsYmFjayhudWxsLCBkYXRhKTtcblx0XHR9LFxuXG5cdFx0Zmx1c2goY2FsbGJhY2spIHtcblx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0fVxuXHR9KTtcblxuXHRjb25zdCBmaW5hbFN0cmVhbSA9IG5ldyBQYXNzVGhyb3VnaCh7XG5cdFx0YXV0b0Rlc3Ryb3k6IGZhbHNlLFxuXHRcdGRlc3Ryb3koZXJyb3IsIGNhbGxiYWNrKSB7XG5cdFx0XHRyZXNwb25zZS5kZXN0cm95KCk7XG5cblx0XHRcdGNhbGxiYWNrKGVycm9yKTtcblx0XHR9XG5cdH0pO1xuXG5cdGNvbnN0IGRlY29tcHJlc3NTdHJlYW0gPSBpc0Jyb3RsaSA/IHpsaWIuY3JlYXRlQnJvdGxpRGVjb21wcmVzcygpIDogemxpYi5jcmVhdGVVbnppcCgpO1xuXG5cdGRlY29tcHJlc3NTdHJlYW0ub25jZSgnZXJyb3InLCBlcnJvciA9PiB7XG5cdFx0aWYgKGlzRW1wdHkgJiYgIXJlc3BvbnNlLnJlYWRhYmxlKSB7XG5cdFx0XHRmaW5hbFN0cmVhbS5lbmQoKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRmaW5hbFN0cmVhbS5kZXN0cm95KGVycm9yKTtcblx0fSk7XG5cblx0bWltaWNSZXNwb25zZShyZXNwb25zZSwgZmluYWxTdHJlYW0pO1xuXHRyZXNwb25zZS5waXBlKGNoZWNrZXIpLnBpcGUoZGVjb21wcmVzc1N0cmVhbSkucGlwZShmaW5hbFN0cmVhbSk7XG5cblx0cmV0dXJuIGZpbmFsU3RyZWFtO1xufTtcbiJdLCJuYW1lcyI6WyJUcmFuc2Zvcm0iLCJQYXNzVGhyb3VnaCIsInJlcXVpcmUiLCJ6bGliIiwibWltaWNSZXNwb25zZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXNwb25zZSIsImNvbnRlbnRFbmNvZGluZyIsImhlYWRlcnMiLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwiaXNCcm90bGkiLCJjcmVhdGVCcm90bGlEZWNvbXByZXNzIiwiZGVzdHJveSIsIkVycm9yIiwiaXNFbXB0eSIsImNoZWNrZXIiLCJ0cmFuc2Zvcm0iLCJkYXRhIiwiX2VuY29kaW5nIiwiY2FsbGJhY2siLCJmbHVzaCIsImZpbmFsU3RyZWFtIiwiYXV0b0Rlc3Ryb3kiLCJlcnJvciIsImRlY29tcHJlc3NTdHJlYW0iLCJjcmVhdGVVbnppcCIsIm9uY2UiLCJyZWFkYWJsZSIsImVuZCIsInBpcGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/decompress-response/index.js\n");

/***/ })

};
;